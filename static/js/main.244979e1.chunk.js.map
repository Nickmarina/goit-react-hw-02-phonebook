{"version":3,"sources":["components/ContactForm/index.jsx","components/ContactList/index.jsx","components/Filter/index.jsx","App.js","index.js"],"names":["ContactForm","onChangeContacts","useState","name","setName","number","setNumber","onSubmit","e","preventDefault","newContact","id","shortid","generate","type","value","pattern","title","required","onChange","target","ContactList","contacts","onDeleteContact","map","onClick","Filter","onFilter","filter","App","setContacts","setFilter","normalizedContact","toLowerCase","contactsForList","contact","includes","find","alert","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAoDeA,EAlDK,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,iBAAuB,EACpBC,mBAAS,IADW,mBACrCC,EADqC,KAC/BC,EAD+B,OAEhBF,mBAAS,IAFO,mBAErCG,EAFqC,KAE7BC,EAF6B,KAmB5C,OACE,uBAAMC,SAhBa,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAa,CACjBC,GAAIC,IAAQC,WACZV,OACAE,UAEFJ,EAAiBS,GACjBN,EAAQ,IACRE,EAAU,KAOV,UACE,kCACE,sCACA,uBACEQ,KAAK,OACLX,KAAK,OACLY,MAAOZ,EACPa,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAdiB,SAAAX,GAAC,OAAIJ,EAAQI,EAAEY,OAAOL,aAiB3C,kCACE,wCACA,uBACED,KAAK,MACLX,KAAK,SACLY,MAAOV,EACPW,QAAQ,+FACRC,MAAM,mlBACNC,UAAQ,EACRC,SAzBmB,SAAAX,GAAC,OAAIF,EAAUE,EAAEY,OAAOL,aA4B/C,wBAAQD,KAAK,SAAb,6BCtBSO,EAxBK,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBAC/B,OACE,6BACGD,EAASE,KAAI,gBAAGb,EAAH,EAAGA,GAAIR,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACZ,+BACGF,EADH,KACWE,EACT,wBAAQS,KAAK,SAASW,QAAS,kBAAMF,EAAgBZ,IAArD,sBAFOA,SCIFe,EATA,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OAC1B,OACE,gCACE,uDACA,uBAAOd,KAAK,OAAOC,MAAOa,EAAQT,SAAUQ,QCwCnCE,EAvCH,WAAO,IAAD,EACgB3B,mBAAS,CACvC,CAAES,GAAI,OAAQR,KAAM,gBAAiBE,OAAQ,aAC7C,CAAEM,GAAI,OAAQR,KAAM,iBAAkBE,OAAQ,aAC9C,CAAEM,GAAI,OAAQR,KAAM,gBAAiBE,OAAQ,aAC7C,CAAEM,GAAI,OAAQR,KAAM,iBAAkBE,OAAQ,eALhC,mBACTiB,EADS,KACCQ,EADD,OAOY5B,mBAAS,IAPrB,mBAOT0B,EAPS,KAODG,EAPC,KAgBVC,EAAoBJ,EAAOK,cAC3BC,EAAkBZ,EAASM,QAAO,SAAAO,GAAO,OAC7CA,EAAQhC,KAAK8B,cAAcG,SAASJ,MAOtC,OACE,gCACE,2CACA,cAAC,EAAD,CAAa/B,iBAnBY,SAAAS,GAC3B,OAAOY,EAASe,MAAK,SAAAF,GAAO,OAAIA,EAAQhC,OAASO,EAAWP,QACxDmC,MAAM,GAAD,OAAI5B,EAAWP,KAAf,4BACL2B,GAAY,SAAAS,GAAS,4BAAQA,GAAR,CAAmB7B,UAiB1C,0CACA,cAAC,EAAD,CAAQiB,SAfS,SAAAnB,GAAC,OAAIuB,EAAUvB,EAAEY,OAAOL,QAeTa,OAAQA,IACxC,cAAC,EAAD,CACEN,SAAUY,EACVX,gBAZqB,SAAAZ,GACzBmB,GAAY,SAAAS,GAAS,OAAIA,EAAUX,QAAO,SAAAO,GAAO,OAAIA,EAAQxB,KAAOA,eCvBxE6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.244979e1.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport shortid from 'shortid';\nconst ContactForm = ({ onChangeContacts }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    onChangeContacts(newContact);\n    setName('');\n    setNumber('');\n  };\n\n  const handleChangeName = e => setName(e.target.value);\n  const handleChangeNumber = e => setNumber(e.target.value);\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        <h3>Name</h3>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChangeName}\n        />\n      </label>\n      <label>\n        <h3>Number</h3>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n          required\n          onChange={handleChangeNumber}\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id}>\n          {name}: {number}\n          <button type=\"button\" onClick={() => onDeleteContact(id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\nexport default ContactList;\n","const Filter = ({ onFilter, filter }) => {\n  return (\n    <div>\n      <h4>Find contacts by name</h4>\n      <input type=\"text\" value={filter} onChange={onFilter}></input>\n    </div>\n  );\n};\n\nexport default Filter;\n","import { useState } from 'react';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nconst App = () => {\n  const [contacts, setContacts] = useState([\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ]);\n  const [filter, setFilter] = useState('');\n\n  const handleChangeContacts = newContact => {\n    return contacts.find(contact => contact.name === newContact.name)\n      ? alert(`${newContact.name} is already in contacts`)\n      : setContacts(prevState => [...prevState, newContact]);\n  };\n\n  const handleFilter = e => setFilter(e.target.value);\n  const normalizedContact = filter.toLowerCase();\n  const contactsForList = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedContact),\n  );\n\n  const hadleDeleteContact = id => {\n    setContacts(prevState => prevState.filter(contact => contact.id !== id));\n  };\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm onChangeContacts={handleChangeContacts} />\n      <h2>Contacts</h2>\n      <Filter onFilter={handleFilter} filter={filter} />\n      <ContactList\n        contacts={contactsForList}\n        onDeleteContact={hadleDeleteContact}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}